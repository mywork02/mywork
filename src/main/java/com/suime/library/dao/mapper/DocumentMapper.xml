<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suime.library.dao.DocumentMapper">
	<!--<cache flushInterval="300000" size="512" type="org.mybatis.caches.memcached.MemcachedCache"/>-->

	<resultMap id="resultMap" type="com.suime.context.model.Document">
		<id column="id" property="id"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="actived" property="actived"/>
		<result column="category_code" property="categoryCode"/>
		<result column="file_key" property="fileKey"/>
		<result column="file_name" property="fileName"/>
		<result column="intro" property="intro"/>
		<result column="name" property="name"/>
		<result column="tags" property="tags"/>
		<result column="category_id" property="categoryId"/>
		<result column="major_group_id" property="majorGroupId"/>
		<result column="school_id" property="schoolId"/>
		<result column="file_id" property="fileId"/>
		<!--<result column="key_words" property="keyWords"/>-->
		<result column="content" property="content"/>
	</resultMap>

	<sql id="sqlWhere">
		<if test="conds!=null">
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				<foreach collection="conds.conds" index="index" item="cond">
					${cond.linkType}
					<if test="cond.condType == 'EQUAL'">${cond.param} = #{cond.value}</if>
					<if test="cond.condType == 'NOTEQUAL'">${cond.param} &lt;&gt; #{cond.value}</if>
					<if test="cond.condType == 'GREATEQUAL'">${cond.param} &gt;= #{cond.value}</if>
					<if test="cond.condType == 'GREATTHAN'">${cond.param} &gt; #{cond.value}</if>
					<if test="cond.condType == 'LESSEQUAL'">${cond.param} &lt;= #{cond.value}</if>
					<if test="cond.condType == 'LESSTHAN'">${cond.param} &lt; #{cond.value}</if>
					<if test="cond.condType == 'BETWEEN'">${cond.param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
					<if test="cond.condType == 'ISNULL'">${cond.param} IS NULL</if>
					<if test="cond.condType == 'NOTNULL'">${cond.param} IS NOT NULL</if>
					<if test="cond.condType == 'LIKE'">${cond.param} LIKE #{cond.value}</if>
					<if test="cond.condType == 'IN'">${cond.param} IN
						<foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
				</foreach>
			</trim>
		</if>
	</sql>

	<sql id="sqlColumns">
		id, created_at, updated_at, actived, category_code, file_key, file_name, intro, name, tags, category_id, major_group_id, school_id, file_id
	</sql>

	<insert id="save" parameterType="com.suime.context.model.Document" useGeneratedKeys="true" keyProperty="id">
		insert into wenku_document
		(
		created_at, updated_at, actived, category_code, file_key, file_name, intro, name, tags, category_id, major_group_id, school_id, file_id
		)
		values
		(
		#{createdAt, jdbcType=TIMESTAMP}, #{updatedAt, jdbcType=TIMESTAMP}, #{actived, jdbcType=TINYINT}, #{categoryCode, jdbcType=VARCHAR}, 
		#{fileKey, jdbcType=VARCHAR}, #{fileName, jdbcType=VARCHAR}, #{intro, jdbcType=VARCHAR}, #{name, jdbcType=VARCHAR}, 
		#{tags, jdbcType=VARCHAR}, #{categoryId, jdbcType=BIGINT}, #{majorGroupId, jdbcType=BIGINT}, #{schoolId, jdbcType=BIGINT}, 
		#{fileId, jdbcType=BIGINT}
		)
	</insert>

	<select id="fetchById" parameterType="java.lang.Long" resultMap="resultMap">
		SELECT <include refid="sqlColumns" /> FROM wenku_document t
		WHERE t.id=#{id}
		</select>

	<select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)  FROM wenku_document<include refid="sqlWhere" />
	</select>

	<select id="fetchSearchByPage" parameterType="java.util.Map" resultMap="resultMap">
	<choose>
		<when test="limit>0">
			SELECT <include refid="sqlColumns" /> 
			FROM wenku_document t
			<include refid="sqlWhere" />
			limit #{offset},#{limit}
		</when>
		<otherwise>
			SELECT <include refid="sqlColumns" /> 
			FROM wenku_document t
			<include refid="sqlWhere" />
		</otherwise>
	</choose>
	</select>

	<update id="update" parameterType="com.suime.context.model.Document">
		update wenku_document
		<set>
			<if test="id != null">
				id = #{id, jdbcType=BIGINT},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt, jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt, jdbcType=TIMESTAMP},
			</if>
			<if test="actived != null">
				actived = #{actived, jdbcType=TINYINT},
			</if>
			<if test="categoryCode != null">
				category_code = #{categoryCode, jdbcType=VARCHAR},
			</if>
			<if test="fileKey != null">
				file_key = #{fileKey, jdbcType=VARCHAR},
			</if>
			<if test="fileName != null">
				file_name = #{fileName, jdbcType=VARCHAR},
			</if>
			<if test="intro != null">
				intro = #{intro, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="tags != null">
				tags = #{tags, jdbcType=VARCHAR},
			</if>
			<if test="categoryId != null">
				category_id = #{categoryId, jdbcType=BIGINT},
			</if>
			<if test="majorGroupId != null">
				major_group_id = #{majorGroupId, jdbcType=BIGINT},
			</if>
			<if test="schoolId != null">
				school_id = #{schoolId, jdbcType=BIGINT},
			</if>
			<if test="fileId != null">
				file_id = #{fileId, jdbcType=BIGINT},
			</if>
			<!--<if test="keyWords != null">-->
				<!--key_words = #{keyWords, jdbcType=VARCHAR},-->
			<!--</if>-->
			<!--<if test="content != null">-->
				<!--content = #{content, jdbcType=VARCHAR},-->
			<!--</if>-->
		</set>
		where id=#{id,jdbcType=BIGINT}
	</update>

	<delete id="delete" parameterType="java.lang.Long">
		delete from wenku_document where id=#{id,jdbcType=BIGINT}
	</delete>

</mapper>