<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suime.library.dao.AdminMapper">
	<!--<cache flushInterval="300000" size="512" type="org.mybatis.caches.memcached.MemcachedCache"/>-->

	<resultMap id="resultMap" type="com.suime.context.model.Admin">
		<id column="id" property="id"/>
		<result column="cellphone" property="cellphone"/>
		<result column="password" property="password"/>
		<result column="name" property="name"/>
		<result column="sex" property="sex"/>
		<result column="status" property="status"/>
		<result column="role_id" property="roleId"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
	</resultMap>

	<sql id="sqlWhere">
		<if test="conds!=null">
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				<foreach collection="conds.conds" index="index" item="cond">
					${cond.linkType}
					<if test="cond.condType == 'EQUAL'">${cond.param} = #{cond.value}</if>
					<if test="cond.condType == 'NOTEQUAL'">${cond.param} &lt;&gt; #{cond.value}</if>
					<if test="cond.condType == 'GREATEQUAL'">${cond.param} &gt;= #{cond.value}</if>
					<if test="cond.condType == 'GREATTHAN'">${cond.param} &gt; #{cond.value}</if>
					<if test="cond.condType == 'LESSEQUAL'">${cond.param} &lt;= #{cond.value}</if>
					<if test="cond.condType == 'LESSTHAN'">${cond.param} &lt; #{cond.value}</if>
					<if test="cond.condType == 'BETWEEN'">${cond.param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
					<if test="cond.condType == 'ISNULL'">${cond.param} IS NULL</if>
					<if test="cond.condType == 'NOTNULL'">${cond.param} IS NOT NULL</if>
					<if test="cond.condType == 'LIKE'">${cond.param} LIKE #{cond.value}</if>
					<if test="cond.condType == 'IN'">${cond.param} IN
						<foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
				</foreach>
			</trim>
		</if>
	</sql>

	<sql id="sqlColumns">
		id, cellphone, password, name, sex, status, role_id, created_at, updated_at
	</sql>

	<insert id="save" parameterType="com.suime.context.model.Admin" useGeneratedKeys="true" keyProperty="id">
		insert into wenji_admin
		(
		cellphone, password, name, sex, status, role_id, created_at, updated_at
		)
		values
		(
		#{cellphone, jdbcType=VARCHAR}, #{password, jdbcType=VARCHAR}, #{name, jdbcType=VARCHAR}, #{sex, jdbcType=TINYINT}, 
		#{status, jdbcType=TINYINT}, #{roleId, jdbcType=BIGINT}, #{createdAt, jdbcType=TIMESTAMP}, #{updatedAt, jdbcType=TIMESTAMP}
		)
	</insert>

	<select id="fetchById" parameterType="java.lang.Long" resultMap="resultMap">
		SELECT <include refid="sqlColumns" /> FROM wenji_admin t
		WHERE t.id=#{id}
	</select>

	<select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)  FROM wenji_admin<include refid="sqlWhere" />
	</select>

	<select id="fetchSearchByPage" parameterType="java.util.Map" resultMap="resultMap">
	<choose>
		<when test="limit>0">
			SELECT <include refid="sqlColumns" /> 
			FROM wenji_admin t
			<include refid="sqlWhere" />
			limit #{offset},#{limit}
		</when>
		<otherwise>
			SELECT <include refid="sqlColumns" /> 
			FROM wenji_admin t
			<include refid="sqlWhere" />
		</otherwise>
	</choose>
	</select>

	<update id="update" parameterType="com.suime.context.model.Admin">
		update wenji_admin
		<set>
			<if test="id != null">
				id = #{id, jdbcType=BIGINT},
			</if>
			<if test="cellphone != null">
				cellphone = #{cellphone, jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password, jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name, jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex, jdbcType=TINYINT},
			</if>
			<if test="status != null">
				status = #{status, jdbcType=TINYINT},
			</if>
			<if test="roleId != null">
				role_id = #{roleId, jdbcType=BIGINT},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt, jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt, jdbcType=TIMESTAMP},
			</if>
		</set>
		where id=#{id,jdbcType=BIGINT}
	</update>

	<delete id="delete" parameterType="java.lang.Long">
		delete from wenji_admin where id=#{id,jdbcType=BIGINT}
	</delete>


	<select id="countWidthRole" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)  FROM wenji_admin t LEFT JOIN wenji_role role ON role.id=t.role_id
		<include refid="sqlWhere" />
	</select>
	<select id="fetchDtoSearch" parameterType="java.util.Map" resultType="com.suime.library.dto.AdminDto">
		SELECT t.id AS id, t.cellphone AS cellphone, t.name AS name, t.sex AS sex, t.status AS status, t.role_id AS roleId, role.code AS roleCode, role.name AS roleName
		FROM wenji_admin t
		LEFT JOIN wenji_role role ON role.id=t.role_id
		<include refid="sqlWhere" />
		<if test="sort!=null">ORDER BY ${sort.param} ${sort.type}</if>
		<if test="limit>0">limit #{offset},#{limit}</if>
	</select>

</mapper>