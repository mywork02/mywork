<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suime.library.dao.StudentMapper">
    <!--<cache flushInterval="300000" size="512" type="org.mybatis.caches.memcached.MemcachedCache"/>-->

    <resultMap id="resultMap" type="com.suime.context.model.Student">
        <id column="id" property="id"/>
        <result column="cellphone" property="cellphone"/>
        <result column="password" property="password"/>
        <result column="major_group_id" property="majorGroupId"/>
        <result column="start_year" property="startYear"/>
        <result column="school_id" property="schoolId"/>
        <result column="building_id" property="buildingId"/>
        <result column="room" property="room"/>
        <result column="cash" property="cash"/>
        <result column="allow_ads" property="allowAds"/>
        <result column="first_printed_at" property="firstPrintedAt"/>
        <result column="default_printshop_id" property="defaultPrintshopId"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="avatar" property="avatar"/>
        <result column="nick_name" property="nickName"/>
        <result column="source" property="source"/>
        <result column="status" property="status"/>
        <result column="invitecode" property="inviteCode"/>
        <result column="linked_printshop_id" property="linkedPrintshopId"/>
        <result column="point" property="point"/>
        <result column="avliable_point" property="avliablePoint"/>
    </resultMap>

    <sql id="sqlWhere">
        <if test="conds!=null">
            <trim prefix="WHERE" prefixOverrides="AND|OR">
                <foreach collection="conds.conds" index="index" item="cond">
                    ${cond.linkType}
                    <if test="cond.condType == 'EQUAL'">${cond.param} = #{cond.value}</if>
                    <if test="cond.condType == 'NOTEQUAL'">${cond.param} &lt;&gt; #{cond.value}</if>
                    <if test="cond.condType == 'GREATEQUAL'">${cond.param} &gt;= #{cond.value}</if>
                    <if test="cond.condType == 'GREATTHAN'">${cond.param} &gt; #{cond.value}</if>
                    <if test="cond.condType == 'LESSEQUAL'">${cond.param} &lt;= #{cond.value}</if>
                    <if test="cond.condType == 'LESSTHAN'">${cond.param} &lt; #{cond.value}</if>
                    <if test="cond.condType == 'BETWEEN'">${cond.param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
                    <if test="cond.condType == 'ISNULL'">${cond.param} IS NULL</if>
                    <if test="cond.condType == 'NOTNULL'">${cond.param} IS NOT NULL</if>
                    <if test="cond.condType == 'LIKE'">${cond.param} LIKE #{cond.value}</if>
                    <if test="cond.condType == 'IN'">${cond.param} IN
                        <foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
                            #{item}
                        </foreach>
                    </if>
                </foreach>
            </trim>
        </if>
    </sql>

    <sql id="sqlOrder">
        <choose>
            <when test="sort!=null">
                ORDER BY ${sort.param} ${sort.type}
            </when>
            <otherwise>
                ORDER BY t.created_at DESC
            </otherwise>
        </choose>
    </sql>

    <sql id="sqlColumns">
        id, cellphone, password, major_group_id, start_year, school_id, building_id, room, cash, allow_ads, first_printed_at, default_printshop_id, created_at, updated_at,
        avatar, nick_name, source, status, invitecode, linked_printshop_id, point, avliable_point
    </sql>

    <select id="fetchById" parameterType="java.lang.Long" resultMap="resultMap">
        SELECT <include refid="sqlColumns" /> FROM wenji_student t
        WHERE t.id=#{id}
    </select>

    <select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT COUNT(1)  FROM wenji_student<include refid="sqlWhere" />
    </select>

    <select id="fetchSearchByPage" parameterType="java.util.Map" resultMap="resultMap">
        <choose>
            <when test="limit>0">
                SELECT <include refid="sqlColumns" />
                FROM wenji_student t
                <include refid="sqlWhere" />
                limit #{offset},#{limit}
            </when>
            <otherwise>
                SELECT <include refid="sqlColumns" />
                FROM wenji_student t
                <include refid="sqlWhere" />
            </otherwise>
        </choose>
    </select>

    <update id="update" parameterType="com.suime.context.model.Student">
        update wenji_student
        <set>
            <if test="id != null">
                id = #{id, jdbcType=BIGINT},
            </if>
            <if test="cellphone != null">
                cellphone = #{cellphone, jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password, jdbcType=VARCHAR},
            </if>
            <if test="majorGroupId != null">
                major_group_id = #{majorGroupId, jdbcType=VARCHAR},
            </if>
            <if test="startYear != null">
                start_year = #{startYear, jdbcType=INTEGER},
            </if>
            <if test="schoolId != null">
                school_id = #{schoolId, jdbcType=BIGINT},
            </if>
            <if test="buildingId != null">
                building_id = #{buildingId, jdbcType=BIGINT},
            </if>
            <if test="room != null">
                room = #{room, jdbcType=VARCHAR},
            </if>
            <if test="cash != null">
                cash = #{cash, jdbcType=INTEGER},
            </if>
            <if test="allowAds != null">
                allow_ads = #{allowAds, jdbcType=TINYINT},
            </if>
            <if test="firstPrintedAt != null">
                first_printed_at = #{firstPrintedAt, jdbcType=TIMESTAMP},
            </if>
            <if test="defaultPrintshopId != null">
                default_printshop_id = #{defaultPrintshopId, jdbcType=BIGINT},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt, jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt, jdbcType=TIMESTAMP},
            </if>
            <if test="avatar != null">
                avatar = #{avatar, jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName, jdbcType=VARCHAR},
            </if>
            <if test="source != null">
                source = #{source, jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status, jdbcType=INTEGER},
            </if>
            <if test="inviteCode != null">
                invitecode = #{inviteCode, jdbcType=VARCHAR},
            </if>
            <if test="linkedPrintshopId != null">
                linked_printshop_id = #{linkedPrintshopId, jdbcType=BIGINT},
            </if>
        </set>
        where id=#{id,jdbcType=BIGINT}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        delete from wenji_student where id=#{id,jdbcType=BIGINT}
    </delete>

    <select id="fetchPageNoPassword" parameterType="java.util.Map" resultMap="resultMap">
        <choose>
            <when test="limit>0">
                SELECT cellphone, major_group_id, start_year, school_id, building_id, room, cash, allow_ads,
                first_printed_at, default_printshop_id, created_at, updated_at, avatar, nick_name, source, status,
                invitecode,linked_printshop_id
                FROM wenji_student t
                <include refid="sqlWhere"/>
                <include refid="sqlOrder"/>
                limit #{offset},#{limit}
            </when>
            <otherwise>
                SELECT cellphone, major_group_id, start_year, school_id, building_id, room, cash, allow_ads,
                first_printed_at, default_printshop_id, created_at, updated_at, avatar, nick_name, source, status,
                invitecode,linked_printshop_id
                FROM wenji_student t
                <include refid="sqlWhere"/>
                <include refid="sqlOrder"/>
            </otherwise>
        </choose>
    </select>

    <select id="fetchByBuilding" parameterType="java.util.Map" resultMap="resultMap">
        SELECT id, cellphone, major_group_id, start_year, school_id, building_id, room, cash, allow_ads,
        first_printed_at, default_printshop_id, created_at, updated_at, avatar, nick_name, source, status,
        invitecode,linked_printshop_id
        FROM wenji_student t
        WHERE  t.linked_printshop_id IN (
          SELECT rels.printshop_id FROM wenji_printshop_building_rels rels
          WHERE rels.building_id=#{buildingId}
        )
        limit 1
    </select>

</mapper>