<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suime.library.dao.ActivityMapper">
	<!--<cache flushInterval="300000" size="512" type="org.mybatis.caches.memcached.MemcachedCache"/>-->

	<resultMap id="resultMap" type="com.suime.context.model.Activity">
		<id column="id" property="id"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="actived" property="actived"/>
		<result column="background" property="background"/>
		<result column="code" property="code"/>
		<result column="key_words" property="keyWords"/>
		<result column="mobile_banner" property="mobileBanner"/>
		<result column="pc_banner" property="pcBanner"/>
		<result column="sub_titles" property="subTitles"/>
		<result column="title" property="title"/>
		<result column="order_num" property="orderNum"/>
	</resultMap>

	<resultMap id="resultDtoMap" type="com.suime.library.dto.ActivityDto">
		<id column="id" property="id"/>
		<result column="created_at" property="createdAt"/>
		<result column="updated_at" property="updatedAt"/>
		<result column="actived" property="actived"/>
		<result column="background" property="background"/>
		<result column="code" property="code"/>
		<result column="key_words" property="keyWords"/>
		<result column="mobile_banner" property="mobileBanner"/>
		<result column="pc_banner" property="pcBanner"/>
		<result column="sub_titles" property="subTitles"/>
		<result column="title" property="title"/>
		<result column="order_num" property="orderNum"/>
	</resultMap>

	<sql id="sqlWhere">
		<if test="conds!=null">
			<trim prefix="WHERE" prefixOverrides="AND|OR">
				<foreach collection="conds.conds" index="index" item="cond">
					${cond.linkType}
					<if test="cond.condType == 'EQUAL'">${cond.param} = #{cond.value}</if>
					<if test="cond.condType == 'NOTEQUAL'">${cond.param} &lt;&gt; #{cond.value}</if>
					<if test="cond.condType == 'GREATEQUAL'">${cond.param} &gt;= #{cond.value}</if>
					<if test="cond.condType == 'GREATTHAN'">${cond.param} &gt; #{cond.value}</if>
					<if test="cond.condType == 'LESSEQUAL'">${cond.param} &lt;= #{cond.value}</if>
					<if test="cond.condType == 'LESSTHAN'">${cond.param} &lt; #{cond.value}</if>
					<if test="cond.condType == 'BETWEEN'">${cond.param} BETWEEN #{cond.startValue} AND #{cond.endValue}</if>
					<if test="cond.condType == 'ISNULL'">${cond.param} IS NULL</if>
					<if test="cond.condType == 'NOTNULL'">${cond.param} IS NOT NULL</if>
					<if test="cond.condType == 'LIKE'">${cond.param} LIKE #{cond.value}</if>
					<if test="cond.condType == 'IN'">${cond.param} IN
						<foreach item="item" index="index" collection="cond.value" open="(" separator="," close=")">
							#{item}
						</foreach>
					</if>
				</foreach>
			</trim>
		</if>
	</sql>

    <sql id="sqlOrder">
        <choose>
            <when test="sort!=null">
                ORDER BY ${sort.param} ${sort.type}
            </when>
            <otherwise>
                ORDER BY t.created_at DESC
            </otherwise>
        </choose>
    </sql>

	<sql id="sqlColumns">
		id, created_at, updated_at, actived, background, code, key_words, mobile_banner, pc_banner, sub_titles, title, order_num
	</sql>

	<insert id="save" parameterType="com.suime.context.model.Activity" useGeneratedKeys="true" keyProperty="id">
		insert into wenku_activity
		(
		created_at, updated_at, actived, background, code, key_words, mobile_banner, pc_banner, sub_titles, title, order_num
		)
		values
		(
		#{createdAt, jdbcType=TIMESTAMP}, #{updatedAt, jdbcType=TIMESTAMP}, #{actived, jdbcType=TINYINT}, #{background, jdbcType=VARCHAR},
		#{code, jdbcType=VARCHAR}, #{keyWords, jdbcType=VARCHAR}, #{mobileBanner, jdbcType=VARCHAR}, #{pcBanner, jdbcType=VARCHAR},
		#{subTitles, jdbcType=VARCHAR}, #{title, jdbcType=VARCHAR}, #{orderNum, jdbcType=INTEGER}
		)
	</insert>

	<select id="fetchById" parameterType="java.lang.Long" resultMap="resultMap">
		SELECT <include refid="sqlColumns" /> FROM wenku_activity t
		WHERE t.id=#{id}
	</select>

	<select id="count" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT COUNT(1)  FROM wenku_activity<include refid="sqlWhere" />
	</select>

	<select id="fetchSearchByPage" parameterType="java.util.Map" resultMap="resultMap">
		<choose>
			<when test="limit>0">
				SELECT <include refid="sqlColumns" />
				FROM wenku_activity t
				<include refid="sqlWhere" />
				limit #{offset},#{limit}
			</when>
			<otherwise>
				SELECT <include refid="sqlColumns" />
				FROM wenku_activity t
				<include refid="sqlWhere" />
			</otherwise>
		</choose>
	</select>

	<update id="update" parameterType="com.suime.context.model.Activity">
		update wenku_activity
		<set>
			<if test="id != null">
				id = #{id, jdbcType=BIGINT},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt, jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt, jdbcType=TIMESTAMP},
			</if>
			<if test="actived != null">
				actived = #{actived, jdbcType=TINYINT},
			</if>
			<if test="background != null">
				background = #{background, jdbcType=VARCHAR},
			</if>
			<if test="code != null">
				code = #{code, jdbcType=VARCHAR},
			</if>
			<if test="keyWords != null">
				key_words = #{keyWords, jdbcType=VARCHAR},
			</if>
			<if test="mobileBanner != null">
				mobile_banner = #{mobileBanner, jdbcType=VARCHAR},
			</if>
			<if test="pcBanner != null">
				pc_banner = #{pcBanner, jdbcType=VARCHAR},
			</if>
			<if test="subTitles != null">
				sub_titles = #{subTitles, jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				title = #{title, jdbcType=VARCHAR},
			</if>
			<if test="orderNum != null">
				order_num = #{orderNum, jdbcType=INTEGER},
			</if>
		</set>
		where id=#{id,jdbcType=BIGINT}
	</update>

	<delete id="delete" parameterType="java.lang.Long">
		delete from wenku_activity where id=#{id,jdbcType=BIGINT}
	</delete>

    <select id="fetchDtoSearchByPage" parameterType="java.util.Map" resultMap="resultDtoMap">
        <choose>
            <when test="limit>0">
                SELECT <include refid="sqlColumns" />
                FROM wenku_activity t
                <include refid="sqlWhere" />
                <include refid="sqlOrder" />
                limit #{offset},#{limit}
            </when>
            <otherwise>
                SELECT <include refid="sqlColumns" />
                FROM wenku_activity t
                <include refid="sqlWhere" />
                <include refid="sqlOrder" />
            </otherwise>
        </choose>
    </select>

</mapper>