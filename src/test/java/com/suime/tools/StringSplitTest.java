package com.suime.tools;

import com.confucian.framework.support.Constants;
import com.confucian.framework.utils.StringUtils;
import org.junit.Test;

import java.util.Random;

/**
 * Created by ice on 29/4/2016.
 */
public class StringSplitTest {

    @Test
    public void test() {
//        String str = "16,89,15,92139,139,7,14,3,244,83847,83845,83707,34,10,13,17,37,33,32,141,83684,83854,30,26,25,30213,54637,55033,44252,21,9,100988,88,77169,83827,30359,23,27,144,30363,77658,83641,8,4,126841,30298,2,1,35,142,30292,83724,83725,25064,83732,83726,83727,36,140,83674,57362,83879,22,24,55032,11,30209,30210,30392,20,30362,83695,30293,82575,81256,54638,55741,78616,77262,83680,83882,113111,82596,18,19,51731,83683,83833,30387,55037,83682,30170,82587,83831,83629,79104,30352,83679,30171,83850,30364,54768,83865,138,77659,110,83730,57146,83690,28,29,81257,83828,30414,54526,98048,98050,91819,97324,81264,81146,81254,30471,143,83729,83718,30164,83838,83756,30389,93590,96427,77168,82604,79,102583,93511,56120,82574,30287,91818,126713,83778,5,31870,93,83878,78708,30393,76620,30214,30215,81,81213,81179,83820,6,83795,83796,83797,30474,57171,30268,81262,83650,83855,261,30493,56555,31,57523,79105,30472,30339,82495,83836,83852,83733,242,76120,73833,83627,83837,84736,30333,82631,82599,86647,86648,23608,41514,30162,82,85,83753,83869,83737,81253,56452,83829,83676,82437,83785,83834,97709,97773,102717,30423,30386,90114,126031,88753,87335,55930,87501,93894,89347,81258,83670,125322,30186,25102,84361,78615,44339,125320,80,108193,89936,98492,131373,82721,86269,141468,98493,144745,126079,129302,88766,126554,130756,137145,141504,8464,140889,97737,126563,98488,130760,51865,141549,92762,86227,140891,91742,98490,131372,83723,83559,83844,94,30316,97,76759,83849,83050,83703,83876,83846,83672,83880,42153,77590,83668,77599,76615,83288,81212,81246,30424,133620,57524,83327,83688,83832,83877,82586,83731,83613,83671,83848,30286,129521,106872,81283,132358,81413,88152,90226,57456,81172,81173,82598,83659,80614,83826,65,76,76754,75,30388,77606,30391,77589,81207,83911,84430,81761,83285,84431,83230,83609,81171,81244,81058,30211,82614,53,81423,81424,81181,81354,81266,85934,83607,84782,57453,83636,83862,110012,82567,84783,108195,42191,61,74,86651,79035,100912,56,30374,30273,114,86625,23609,63,95,34635,90524,30375,82597,128802,129356,56007,71,110006,74154,77543,77768,42350,44334,81261,83739,245,83867,107624,8506,57525,91,83893,72,110008,77990,85933,83677,83678,79451,84732,84733,83734,83814,30296,49,82566,30169,227,30200,85428,83788,234,81236,81250,81203,83721,83231,83864,82632,79044,83792,83793,83794,78128,78133,66,30398,69,116,30148,41716,84735,85276,98,111,96426,83824,81237,87,108,81409,84731,81760,83821,42157,57460,87815,60,62,64,59,71368,83611,81292,79454,83669,81248,83786,54527,57799,55035,57131,52160,54046,97043,79034,80243,30283,55038,81350,81411,108270,108341,79052,82580,30163,83868,83608,83709,83716,79452,83646,83891,82605,83892,85666,81422,76758,83289,83291,30395,59292,83708,67,83681,68,30390,81238,83909,83706,83744,84,81766,78991,59337,83830,77587,83728,77609,92,57,58,104,81251,54766,83740,83715,41515,83894,104997,81303,57458,25083,77601,81164,83812,83889,41707,42162,83890,101247,137127,81174,77604,41559,77605,83912,84734,81265,84697,39,57046,54531,79199,30218,84694,82569,84695,81408,81410,80240,81432,81364,84246,30476,77,81421,30150,181,83863,90248,52072,55,70,83,81259,81293,80285,30371,54529,30144,59454,42173,106,86,132,90,44548,80237,80238,83761,235,58245,83822,41572,80236,81169,52383,84693,80600,81764,81765,83284,83762,130540,83801,80265,20320,41,91771,91783,30465,76564,91148,94103,81343,81138,83030,81363,81340,83665,30308,30196,143360,55742,54767,41521,220,42166,256,77600,83800,83781,83897,83776,83738,83809,81191,81192,84737,84696,81854,83675,77588,83870,78132,82591,83689,83704,83840,81416,30289,81353,84781,81439,81187,44537,83779,83810,83766,93361,48,83799,42,83775,44,45,53852,101026,46,40,77769,81132,81167,82589,84362,30202,51,79055,79032,81230,42201,80251,83813,30437,86626,80266,42146,57454,81190,97358,52,78,57149,57150,100983,30281,80273,81420,81399,81444,81438,81249,81342,82576,83517,82606,114560,80274,64680,47,30173,141304,54364,86650,129520,136917,43,138074,75632,42208,75633,38,83898,124997,122435,82608,83825,83861,77596,185,81380,84727,81273,59338,59453,30372,42340,30488,81163,81279,81280,81228,79844,51735,52065,57801,57341,51732,52158,55029,52165,51733,51734,54604,25066,77941,30282,80242,81436,81295,81289,83714,117131,75638,83722,83839,75637,85529,81157,30407,83694,83560,82607,57057,83702,93895,119,51739,83851,83736,83871,83705,80259,83853,83720,83842,81338,79033,81252,80048,81214,81227,54,184,162,170,83858,20324,79450,226,80246,81402,81263,80272,127048,81403,83628,75984,79050,81405,79051,146477,97728,80244,87569,83886,79046,239,81302,83887,83745,61731,105472,108368,77834,97214,97228,59944,55094,85390,51736,51737,51738,90258,30314,25065,54525,76753,82588,253,254,25187,81206,255,171,83951,112,109,83817,83760,83818,102,30295,79200,80255,81150,83290,81139,81239,83292,83789,83719,83293,81215,81140,81216,81537,169,135390,179,80005,83648,83835,81219,77593,81300,230,79045,81489,80245,81433,117060,81434,81441,83666,81242,83073,83872,83873,83649,83685,42179,34591,93774,41530,41759,81533,79041,57794,97391,42500,55928,90206,54523,98077,57100,77770,83742,130722,130740,86482,90579,130695,87486,130709,130716,107849,130717,81193,93363,129473,101190,81144,83914,83767,88431,70231,141467,94801,100914,83692,83859,81240,129460,61706,30119,113,101,250,103,251,252,82571,88389,81151,83710,82609,56141,81160,81285,81161,80767,101047,101048,81275,76892,79409,30216,81430,30411,54765,81185,142580,78127,81186,81180,81346,81232,81153,81348,83687,73,30248,30373,30246,52425,112795,82579,83673,231,79456,81152,81260,81208,81255,59339,83901,81352,131417,44355,83902,83915,86343,81428,83841,83905,80260,81241,132287,83804,83875,83803,84216,175,177,44518,180,83046,82594,83717,82570,83045,246,105,248,249,44546,81418,87242,98020,8507";
//        StringBuffer sb = new StringBuffer(str);
//        System.out.println(sb.indexOf(Constants.VALUE_SIMPLE_SPLIT_CHAR, 1));
//        //sb.indexOf(Constants.VALUE_SIMPLE_SPLIT_CHAR, 1)
//        System.out.println(str.split(Constants.VALUE_SIMPLE_SPLIT_CHAR).length);
//        String[] split = StringUtils.split(str, Constants.VALUE_SIMPLE_SPLIT_CHAR, 101);
//        for (int i = 0; i < split.length - 1; i++) {
//            System.out.println(i + ":" + split[i]);
//        }
//        System.out.println(StringUtils.split(str, Constants.VALUE_SIMPLE_SPLIT_CHAR, 100).length);
        int limit = 100;
        int i = 0;
        while (i < 20) {
            Random random = new Random();
            int i1 = random.nextInt(limit * limit);
            System.out.println(i1 + "," + ((Double) Math.sqrt(i1)).intValue());
            i++;
        }
        System.out.println("------------------------------------------------------");
        i = 0;
        Random random = new Random();
        while (i < 20) {
            int i1 = random.nextInt(limit * limit);
            System.out.println(i1 + "," + ((Double) Math.sqrt(i1)).intValue());
            i++;
        }

    }

}
